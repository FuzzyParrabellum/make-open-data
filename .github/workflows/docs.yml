name: Generate docs and save as artifact

on:
  workflow_run:
    workflows: ["Integration Test"]
    types:
      - completed

jobs:
  dbt:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' && github.ref == 'refs/heads/main' }}

    services:
      postgres:
        image: postgis/postgis:12-3.1
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: make_open_data
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Check out repository code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.5

    - name: Create Python virtual environment
      run: python3 -m venv dbt-env

    - name: Activate virtual environment and install dependencies
      run: |
        source dbt-env/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set environment variables
      run: |
        echo "POSTGRES_DB=make_open_data" >> $GITHUB_ENV
        echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV
        echo "POSTGRES_PASSWORD=postgres" >> $GITHUB_ENV
        echo "POSTGRES_PORT=5432" >> $GITHUB_ENV
        echo "POSTGRES_USER=postgres" >> $GITHUB_ENV

    - name: Set DBT_PROFILES_DIR
      run: echo "DBT_PROFILES_DIR=." >> $GITHUB_ENV

    - name: check dbt project
      run: |
        source dbt-env/bin/activate
        dbt debug
        
    - name: Generate dbt Documentation
      run: |
        source dbt-env/bin/activate
        dbt docs generate

    - name: Save Documentation as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: dbt-docs
        path: target/*

    - name: Checkout new repository
      uses: actions/checkout@v2
      with:
        repository: make-open-data/make-open-data-docs
        token: ${{ secrets.PAT }} 
        path: ./new-repo

    - name: Copy dbt docs to new repository
      run: |
        cp -r target/* new-repo/

    - name: Create timestamp file
      run: |
        echo "Documentation generated on: $(date)" > new-repo/timestamp.txt

    - name: Commit and push changes
      run: |
        cd new-repo
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Update dbt docs and timestamp"
        git push --force origin main
